<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="inertial_macros.xacro"/>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
    <!-- BASE LINK -->

    <link name="base_link">

    </link>


    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-0.1 0 0"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0.2 0 0.075"/>
            <geometry>
                <box size="0.4 0.3 0.15"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0.2 0 0.075"/>
            <geometry>
                <box size="0.4 0.3 0.15"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="0.4" y="0.3" z="0.15">
            <origin xyz="0.2 0 0.075" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    <!-- les moments d'inertie -->
    <gazebo reference="chassis">
        <material>Gazebo/balck</material>
    </gazebo>

    <!-- LEFT WHEEL LINK BACK-->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_back"/>
        <origin xyz="0 0.175 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel_back">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>

    </link>
    <gazebo reference="left_wheel_back">
        <material>Gazebo/Blue</material>
    </gazebo>

  <!-- LEFT WHEEL LINK front-->

    <joint name="left_wheel_joint_front" type="fixed">
        <parent link="base_link"/>
        <child link="left_wheel_front"/>
        <origin xyz="0.2 0.175 0" rpy="-${pi/2} 0 0" />
    </joint>

    <link name="left_wheel_front">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>

    </link>
    <gazebo reference="left_wheel_front">
        <material>Gazebo/Blue</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>
    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 -0.175 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>
        <!-- RIGHT WHEEL LINK front -->

    <joint name="right_wheel_joint_front" type="fixed">
        <parent link="base_link"/>
        <child link="right_wheel_front"/>
        <origin xyz="0.2 -0.175 0" rpy="${pi/2} 0 0" />
    </joint>

    <link name="right_wheel_front">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    <gazebo reference="right_wheel_front">
        <material>Gazebo/Blue</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>


    <!-- Camera Joint -->
    <!-- <joint name="camera_joint" type="fixed">
        <parent link="chassis"/>
        <child link="camera_link"/>    
        <origin xyz="0.4 0 0.225" rpy="0 0 0"/>
    
    </joint> -->

    <!-- camera_link describes the camera at the front of the AMR robot -->
    <!-- - It has multiple visual elements, which ultimately get combined together -->
    <!-- - Even if we specify different materials, RViz will just colour them all the same as the first -->
    <!-- - Although we could also specify multiple collision geometries, instead we just use a single box that encompasses the whole camera -->
    <!-- <link name="camera_link">
        <visual>
            <origin xyz="-0.03 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.06 0.15 0.15" />
            </geometry>
            <material name="white" />
        </visual>
        <visual>
            <origin xyz="0.03 0 0" rpy="0 ${pi/2} 0"/>
            <geometry>
                <cylinder length="0.06" radius="0.04" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0.0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.12 0.15 0.15" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.1" x="0.12" y="0.15" z="0.15">
            <origin xyz="0.0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link> -->
</robot>











<!-- source install/setup.bash
colcon build symlink-install
ros2 launch my_bot rsp.launch.py
ros2 run joint_state_publisher_gui joint_state_publisher_gui 
ros2 run teleop_twist_keyboard teleop_twist_keyboard
ros2 topic echo /cmd_vel 
ros2 run rplidar_ros rplidar_composition -ros-args -p serial_port:=/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0-port0 -p frame_id:=laser_frame -p angle_compensate:=true -p scan_mode:=Standard
-->


                                <!-- NOTE -->
<!-- gazebo use a similar format to URDF its name is SDF (Simulation Description Format) but no worries
we have in our hand a tool that can convert URDF to sdf in order to get the entity
spawned in the gazebo environnement -->